#+TITLE: 从零开始用 Emacs 管理笔记
#+DATE: <2021-07-28 三>
#+HUGO_BASE_DIR: ../

[[https://github.com/coldnight/dump-brain-with-emacs/actions/workflows/build.yml][https://github.com/coldnight/dump-brain-with-emacs/actions/workflows/build.yml/badge.svg]]
[[https://github.com/coldnight/dump-brain-with-emacs/actions/workflows/test.yml][https://github.com/coldnight/dump-brain-with-emacs/actions/workflows/test.yml/badge.svg]]

[[https://user-images.githubusercontent.com/21983833/127746882-4ba00691-3be4-49d6-8c8c-e139a14596c2.png]]

* 前言
不同于其他 Emacs 教程，本文着重于从零开始通过 Emacs 做笔记管理，这样做的好处是不着眼于替换你现在的编辑器或者 IDE 避免降低工作效率。
同时希望通过学习当前教程你会得到：

+ 一个强大且免费的编辑器：Emacs；
+ 通过 Emacs 实践一种简单但是非常有效的笔记记录方法。

也许通过记录笔记你会爱上 Emacs 并开始慢慢掌握它，将它作为主要编辑器！

同时也有一些其他入门教程，也推荐你看看：
+ [[https://github.com/redguardtoo/mastering-emacs-in-one-year-guide][一年成为Emacs高手 (像神一样使用编辑器)]]
+ [[https://github.com/w0mTea/An.Emacs.Tutorial.for.Vim.User][An Emacs Tutorial for Vim User]]
+ [[https://book.emacs-china.org/][Master Emacs in 21 Days]]

* 快速体验
1. 克隆当前项目到本地：
  #+begin_src shell
    git clone https://github.com/coldnight/dump-brain-with-emacs.git ~/dump-brain-with-emacs
    cd ~/dump-brain-with-emacs
    git submodule init
    git submodule update
  #+end_src
2. 确保 Emacs 已经安装，如果没有请先安装 Emacs 最新版。
3. 使用当前项目配置文件启动 Emacs：
   #+begin_src shell
     env HOME=~/dump-brain-with-emacs emacs
   #+end_src
4. 等待包管理自动安装相关插件。
5. 在 Emacs 中查看当前系列文章： ~M-x C-c n f Emacs~
* 主题构成
1. 工欲善其事，必先利其器：Emacs 安装
2. 工欲善其事，必先利其器：Emacs 黑话
3. [[https://coldnight.github.io/dump-brain-with-emacs/posts/20220107175445-%E5%B7%A5%E6%AC%B2%E5%96%84%E5%85%B6%E4%BA%8B_%E5%BF%85%E5%85%88%E5%88%A9%E5%85%B6%E5%99%A8_emacs_%E9%85%8D%E7%BD%AE%E7%AF%87/][工欲善其事，必先利其器：Emacs 配置]]
4. 工欲善其事，必先利其器：笔记发布
5. 工欲善其事，必先利其器：笔记增强
6. 道法自然：聪明的笔记记录方式
* 常见问题
1. 网络问题无法启动如何应用代理？

   比如你看到如下报错：[[https://user-images.githubusercontent.com/2527265/148623621-62a18c90-1a53-43dc-a986-a0b1b017cede.png]].

   - 打开代理文件： =C-x C-f ~/.emacs.d/my.el=
   - 确认你的 HTTP 代理是否为 =127.0.0.1:1087= ，如果不是请做更改 =my-url-http-proxy-service= 的值;
   - 执行当前 buffer: ~M-x eval-buffer RET~
   - 打开配置文件: =C-x C-f ~/.emacs.d/init.el=
   - 查找 ~straight.el~ 初始化的位置： ~C-s straight RET~ ，在其上面一行增加：
     #+begin_src elisp
       (my/url-proxy-on)
     #+end_src
   - 执行当前 buffer 重试：  ~M-x eval-buffer RET~ 。
2. straight.el 通过 Git 安装依赖: Failed to run "git"; see buffer =*straight-process*=

   一般情况都是 GitHub HTTPS 克隆失败，可以配置 Git 使用 SSH 替代 HTTPS 来克隆 GitHub 的项目。

   - 打开 Git 配置文件: =C-x C-f ~/.gitconfig=
   - 加入如下配置：
     #+begin_src text
       [url "git@github.com:"]
           insteadOf = https://github.com/
     #+end_src
   - 切回 init.el : ~C-x b init.el RET~
   - 执行当前 buffer 重试：  ~M-x eval-buffer RET~ 。
